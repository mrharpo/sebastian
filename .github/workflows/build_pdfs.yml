name: 🎼 Build PDFs

on:
  workflow_call:
  workflow_dispatch:
    inputs:
      debug:
        description: 🐞 Debug mode
        type: boolean
        default: false

jobs:
  build_pdfs:
    name: 🎶 Build PDFs of all musescore files and generate release
    runs-on: ubuntu-latest

    steps:
      - name: 📰 Checkout
        uses: actions/checkout@v3

      - name: 🏃 Get musescore version
        run: |
          echo MUSESCORE_VERSION=$(curl -s https://api.github.com/repos/musescore/musescore/releases/latest | jq -r .tag_name ) >> $GITHUB_ENV
          echo MUSESCORE_URL=$(curl -s https://api.github.com/repos/musescore/musescore/releases/latest | jq -r '.assets[] | select(.name|endswith("AppImage")) | .browser_download_url') >> $GITHUB_ENV
          echo QT_DEBUG_PLUGINS=${{ inputs.debug }} >> $GITHUB_ENV
          echo QT_QPA_PLATFORM=offscreen >> $GITHUB_ENV
          mkdir -p dist

      - name: 💸 Load cached venv
        id: cache
        uses: actions/cache@v3
        with:
          path: /usr/local/bin
          key: musescore-${{ runner.os }}-${{ env.MUSESCORE_VERSION }}

      - name: 🏋 Download musescore
        if: steps.cache.outputs.cache-hit != 'true'
        run: |
          curl -Lo /usr/local/bin/mscore ${{ env.MUSESCORE_URL }}
          chmod +x /usr/local/bin/mscore

      - name: 💣 Setup dependencies
        run: sudo apt install -y libfuse2

      - name: 🏳‍🌈 Install Qt
        uses: jurplel/install-qt-action@v3
        with:
          extra: -exclude-libs=libnss3.so,libnssutil3.so

      - name: 📝 Generate pdfs
        run: for i in music/*.mscz; do mscore -o "dist/${i%.mscz}.pdf" "$i"; done

      - name: 📦 Generate Release
        uses: softprops/action-gh-release@v1
        with:
          files: dist/*
          draft: true
          generate_release_notes: true
